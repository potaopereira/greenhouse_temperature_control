cmake_minimum_required(VERSION 3.8)
project(gui_monitor)


if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  # add_compile_options(-Wall -Wextra -Wpedantic -Wshadow -Werror)
  add_compile_options(-Wall -Wextra -Wpedantic)
  # /usr/include/x86_64-linux-gnu/qt5/QtCore/qglobal.h:1187:4:
  # error: #error "You must build your code with position independent code
  # if Qt was built with -reduce-relocations. " "Compile your code with -fPIC (-fPIE is not enough)."
  add_compile_options(-fPIC)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
# uncomment the following section in order to fill in
# further dependencies manually.
# find_package(<dependency> REQUIRED)
find_package(rclcpp REQUIRED)
find_package(greenhouse_msg_srv REQUIRED)

find_package(Qt5Core REQUIRED)
find_package(Qt5Gui REQUIRED)
find_package(Qt5Widgets REQUIRED)
find_package(Qt5PrintSupport REQUIRED)
# qt autogenerator stuff
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTOUIC ON)
set(CMAKE_AUTORCC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

# set(CMAKE_INCLUDE_CURRENT_DIR ON)

include_directories(
  ${Qt5Core_INCLUDE_DIRS}
  ${Qt5Gui_INCLUDE_DIRS}
  ${Qt5Widgets_INCLUDE_DIRS}
  ${Qt5PrintSupport_INCLUDE_DIRS}
)

message("Qt5Core_LIBRARIES = ${Qt5Core_INCLUDE_DIRS}")
message("Qt5Gui_INCLUDE_DIRS = ${Qt5Gui_INCLUDE_DIRS}")
message("Qt5Widgets_INCLUDE_DIRS = ${Qt5Widgets_INCLUDE_DIRS}")
message("Qt5PrintSupport_INCLUDE_DIRS = ${Qt5PrintSupport_INCLUDE_DIRS}")

message("Qt5Core_LIBRARIES = ${Qt5Core_LIBRARIES}")
message("Qt5Gui_LIBRARY = ${Qt5Gui_LIBRARY}")
message("Qt5Widgets_LIBRARY = ${Qt5Widgets_LIBRARY}")

add_executable(
  gui_monitor
  src/main.cpp
  src/qcustomplot.cpp
  include/gui_monitor/qcustomplot.h # IMPORTANT: this cannot be ommited: this let's cmake find the autogenerated files
  src/gui_monitor.cpp
  include/gui_monitor/gui_monitor.hpp
  src/plot.cpp
  include/gui_monitor/plot.hpp
  src/parameters.cpp
  include/gui_monitor/parameters.hpp
  src/gui.cpp
  include/gui_monitor/gui.hpp
  src/nodethread.cpp
  include/gui_monitor/nodethread.hpp
)
ament_target_dependencies(
  gui_monitor
  rclcpp
  greenhouse_msg_srv
)
target_link_libraries(
  gui_monitor
  Qt5::Core
  Qt5::Gui
  Qt5::Widgets
  Qt5::PrintSupport
)
qt5_use_modules(
  gui_monitor
  Core
  Gui
  Widgets
  PrintSupport
)
# target_link_libraries(
#   gui_monitor
#   ${Qt5Core_LIBRARIES}
#   ${Qt5Gui_LIBRARY}
#   ${Qt5Widgets_LIBRARY}
# )
target_include_directories(
  gui_monitor
  PUBLIC include
  PRIVATE include/gui_monitor
)

# install(TARGETS) section so that ros2 run can find executable
install(TARGETS
  gui_monitor
  DESTINATION lib/${PROJECT_NAME}
)

# Install launch files.
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
